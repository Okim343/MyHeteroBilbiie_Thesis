//------------------------------------------------
// main.mod   – drives the whole pipeline
//------------------------------------------------

@#include "declarations.mod"      // var … varexo … parameters …

model;
  @#include "equations.mod"
end;


steady_state_model; // This manually inserted from the ss object generated by the julia code in get_steadystate.jl since Dynare.jl doesnt support julia function calls yet
  // 1) Aggregate steady state
  w    = 0.06262480050355407;
  L    = 0.11099948651284855;
  r    = 0.04166666666666674;
  C    = 0.11738613032104049;
  Le   = 0.0821892155544355;
  Lc   = 0.02881027095841303;
  Y    = 0.014325190357317955;

  // 2) Sectoral steady state (I = 9)
  M1      = 0.0005204283612358332;
  M2      = 0.0007676219469187895;
  M3      = 0.0008818106632864761;
  M4      = 0.00097434103071902;
  M5      = 0.0010410001675264372;
  M6      = 0.0010912555921917424;
  M7      = 0.0011333153746823387;
  M8      = 0.0011548238681652523;
  M9      = 0.0011474872219058832;

  C1      = 3.0254993414300974e-5;
  C2      = 7.812594637804382e-5;
  C3      = 0.00014697212614915982;
  C4      = 0.0002878206863139975;
  C5      = 0.0005403421962206838;
  C6      = 0.000991248664509965;
  C7      = 0.001871734407528889;
  C8      = 0.003227665523736235;
  C9      = 0.020846540157873447;

  rho1    = 0.06718491467362374;
  rho2    = 0.07718850629494477;
  rho3    = 0.08110780038578369;
  rho4    = 0.08405037198694348;
  rho5    = 0.08606049841116431;
  rho6    = 0.08752187252963735;
  rho7    = 0.08871201044600399;
  rho8    = 0.08930966958773398;
  rho9    = 0.08910661569560191;

  psi1 = 4.5345361614000835e-5 ;
  psi2 = 5.2612103735163030e-5 ;
  psi3 = 4.8922496063494610e-5 ;
  psi4 = 4.2298233608217766e-5 ;
  psi5 = 3.5493164580631527e-5 ;
  psi6 = 2.9272596208962175e-5 ;
  psi7 = 2.3529484214488463e-5 ;
  psi8 = 1.9136286564028076e-5 ;
  psi9 = 8.5250774644861350e-6 ;

  v1      = 0.1001996808056865;
  v2      = 0.17541960925365283;
  v3      = 0.2872697270805232;
  v4      = 0.50914471954109;
  v5      = 0.8946400071936296;
  v6      = 1.5656200125888515;
  v7      = 2.8465818410706394;
  v8      = 4.8172923464272355;
  v9      = 31.312400251777028;

  d1      = 0.015298628908843311;
  d2      = 0.02678331391604221;
  d3      = 0.04386074801847279;
  d4      = 0.0777369355124152;
  d5      = 0.1365949009718153;
  d6      = 0.23904107670067673;
  d7      = 0.4346201394557759;
  d8      = 0.7355110052328515;
  d9      = 4.780821534013534;

  e1      = 8.87427422600637e-5;
  e2      = 0.00022915591579580872;
  e3      = 0.0004310927895989365;
  e4      = 0.0008442241792260478;
  e5      = 0.0015849102194411039;
  e6      = 0.0029074911220658283;
  e7      = 0.005490096852181614;
  e8      = 0.009467260023901615;
  e9      = 0.06114624170996449;

  y1   = 0.058134789853604575;
  y2   = 0.10177659288096039;
  y3   = 0.1666708424701966;
  y4   = 0.2954003549471777;
  y5   = 0.519060623692898;
  y6   = 0.9083560914625715;
  y7   = 1.6515565299319481;
  y8   = 2.7949418198848353;
  y9   = 18.16712182925143;

  // 3) Exogenous state shifters
  Z     = 1.0;
  Zlag  = 1.0;
  fE    = fE_par;
  X     = 1.0;

  // 4) Log variables for IRFs

    @#for i in 1:I
        logM@{i} = log(M@{i});
        logC@{i} = log(C@{i});
        logd@{i} = log(d@{i});
        logv@{i} = log(v@{i});
        loge@{i} = log(e@{i});
        logy@{i} = log(y@{i});
    @#endfor

    logC = log(C);
    logw = log(w);
    logL = log(L);
    logLe = log(Le);
    logLc = log(Lc);
    logY = log(Y);
  end;


@#include "calibration.mod"       // parameter numbers, shocks, initval …

// -------- Solve & simulate --------

check;

// model_info ;
// model_diagnostics;


stoch_simul(order=1, irf=75, noprint) ;


